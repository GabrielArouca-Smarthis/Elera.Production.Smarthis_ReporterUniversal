<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_bearerTokenOrc" Type="InArgument(ss:SecureString)" />
    <x:Property Name="in_queueName" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_endPointQueueDefinitionIdOrc" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_endPointQueueItemOrc" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, x:Object))">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="io_queuesProcessed" Type="InOutArgument(scg:List(x:String))">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_emailBusinessArea" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_sendMailToBusinessArea" Type="InArgument(x:Boolean)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_emailReceiverCc" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_uipathOrganizationUnitId" Type="InArgument(x:String)" />
    <x:Property Name="in_blockQuantity" Type="InArgument(x:Int32)" />
    <x:Property Name="in_limitQueueNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="in_subjectQueueName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>928,1547</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Process_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="58">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="54">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Process" sap:VirtualizedContainerService.HintSize="546,1482" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="definitionId" />
      <Variable x:TypeArguments="njl:JToken" Name="listQueueItem" />
      <Variable x:TypeArguments="sd:DataTable" Name="queueHistoric" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[If(io_queuesProcessed.Count &gt; 0,io_queuesProcessed.Any(Function(x) x.Trim().Equals(in_queueName.Trim())),False)]" DisplayName="Validation of duplicate items at runtime" sap:VirtualizedContainerService.HintSize="484,220" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Throw DisplayName="Throw - BRE" Exception="[New BusinessRuleException(String.Format(&quot; A fila {0} já foi processada anteriormente durante essa execução.&quot;,in_queueName))]" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </If.Then>
      <If.Else>
        <AddToCollection x:TypeArguments="x:String" Collection="[io_queuesProcessed]" DisplayName="Add To Collection queue name" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[in_queueName]" />
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[String.Format(&quot;Iniciando o processamento {0}&quot;,in_queueName)]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RetrieveQueueDefinitionId workflow" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Workflows\OrchestratorApi\RetrieveQueueDefinitionId.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_queueName">[in_queueName]</InArgument>
        <InArgument x:TypeArguments="ss:SecureString" x:Key="in_token">[in_bearerTokenOrc]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_definitionId">[definitionId]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_endPointQueueDefinitionIdOnPrem">[in_endPointQueueDefinitionIdOrc]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_uipathOrganizationUnitId">[in_uipathOrganizationUnitId]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RetrieveQueueItem workflow" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflows\RetrieveQueueItem.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_queueName">[in_queueName]</InArgument>
        <OutArgument x:TypeArguments="njl:JToken" x:Key="out_listQueueItem">[listQueueItem]</OutArgument>
        <InArgument x:TypeArguments="ss:SecureString" x:Key="in_token">[in_bearerTokenOrc]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_endPointJobsOnPrem">[in_endPointQueueItemOrc]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_uipathOrganizationUnitId">[in_uipathOrganizationUnitId]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_definitionId">[definitionId]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_blockQuantity">[in_blockQuantity]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_limitQueueNumber">[in_limitQueueNumber]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GenerateQueueHistoric workflow" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Workflows\GenerateQueueHistoric.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_queueName">[in_queueName]</InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_queueHistoric">[queueHistoric]</OutArgument>
        <InArgument x:TypeArguments="njl:JToken" x:Key="in_listQueueItems">[listQueueItem]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign DisplayName="Assign subject queue name" sap:VirtualizedContainerService.HintSize="484,82" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[in_queueName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[If(Not String.IsNullOrEmpty(in_subjectQueueName),in_subjectQueueName,in_queueName)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GenerateSpreadSheetReport workflow" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Workflows\GenerateSpreadSheetReport.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_queueHistoric">[queueHistoric]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_queueName">[in_queueName]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_spreadSheetDestinationPath">[Path.Combine(DirectCast(in_config("spreadSheetFilePath"),System.String),String.Concat(in_queueName,"-itens.xlsx"))]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_spreadSheetPath">[Path.Combine(DirectCast(in_config("spreadSheetFilePath"),System.String),"Template Reporter.xlsx")]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[String.Format(DirectCast(in_config(&quot;subject&quot;),System.String),&#xA;in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).&#xA;&#x9;Replace(String.Concat(&quot;/&quot;,in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c)(in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c).Length-1)),&#xA;&#x9;&#x9;String.Concat(&quot; - &quot;,&#xA;&#x9;&#x9;&#x9;If(System.Text.RegularExpressions.Regex.Matches(in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c)(in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c).Length-1),&quot;([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)&quot;).OfType(Of System.Text.RegularExpressions.Match).Count&gt;0, &#xA;&#x9;&#x9;&#x9;&#x9;String.Join(&quot; &quot;,System.Text.RegularExpressions.Regex.Matches(in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c)(in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c).Length-1),&quot;([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)&quot;).OfType(Of System.Text.RegularExpressions.Match).Select(Function(x) x.Value)),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c)(in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c).Length-1)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;).Replace(&quot;cao&quot;,&quot;ção&quot;),now.ToString(&quot;dd/MM/yyyy HH:mm:ss&quot;))]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SendReportMailSmtp workflow" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" Timeout="00:10:00" UnSafe="False" WorkflowFileName=".templates\SendReportMailSmtp.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_smtpMailReceiverTo">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_emailBusinessArea" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_smtpMailSubject">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="String.Format(DirectCast(in_config(&quot;subject&quot;),String),in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).&#xD;&#xA;&#x9;Replace(String.Concat(&quot;/&quot;,in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c)(in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c).Length-1)),&#xD;&#xA;&#x9;&#x9;String.Concat(&quot; - &quot;,&#xD;&#xA;&#x9;&#x9;&#x9;If(System.Text.RegularExpressions.Regex.Matches(in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c)(in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c).Length-1),&quot;([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)&quot;).OfType(Of System.Text.RegularExpressions.Match).Count&gt;0, &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;String.Join(&quot; &quot;,System.Text.RegularExpressions.Regex.Matches(in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c)(in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c).Length-1),&quot;([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)&quot;).OfType(Of System.Text.RegularExpressions.Match).Select(Function(x) x.Value)),&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c)(in_queueName.Replace(&quot;_&quot;,&quot;/&quot;).Split(&quot;/&quot;c).Length-1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;).Replace(&quot;cao&quot;,&quot;ção&quot;),now.ToString(&quot;dd/MM/yyyy HH:mm:ss&quot;))" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_attachment">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Path.Combine(DirectCast(in_config(&quot;spreadSheetFilePath&quot;),String),String.Concat(in_queueName,&quot;-itens.xlsx&quot;))" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_smtpPort">
          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="DirectCast(in_config(&quot;smtpMailPort&quot;), Int32)" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_smtpServer">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="DirectCast(in_config(&quot;smtpMailServer&quot;),String)" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_smtpMailReceiverCc">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_emailReceiverCc" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_projectName">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="DirectCast(in_config(&quot;projectName&quot;),String)" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_logoBase64">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="DirectCast(in_config(&quot;logoBase64&quot;),String)" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_gifBase64">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="DirectCast(in_config(&quot;gifBase64&quot;),String)" />
        </InArgument>
        <InArgument x:TypeArguments="x:Boolean" x:Key="in_sendMailToBusinessArea">
          <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="in_sendMailToBusinessArea" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>